{"version":3,"file":"static/js/947.92f4aad0.chunk.js","mappings":"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","sources":["components/Api/Api.jsx","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst API_KEY = '0c0590b3805374471ab3fff3c1c487de';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst END_POINTS = {\n  trending: '/trending/movie/week',\n  querySearch: '/search/movie',\n  movieDetails: '/movie',\n  movieCredits: '/credits',\n  movieReviews: '/reviews',\n};\n\nexport const getMovies = async (page = 1) => {\n  const res = await axios.get(\n    `${END_POINTS.trending}?api_key=${API_KEY}&page=${page}&language=en-US&include_adult=false&per_page=24`\n  );\n  return res.data.results;\n};\n\nexport const Query = async (query, page = 1) => {\n  const res = await axios.get(\n    `${END_POINTS.querySearch}?api_key=${API_KEY}&page=${page}&query=${query}&language=en-US&include_adult=false`\n  );\n\n  return res.data.results;\n};\n\nexport const MoviesDetails = async id => {\n  const res = await axios.get(\n    `${END_POINTS.movieDetails}/${id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return res.data;\n};\n\n\nexport const MoviesCredits = async id => {\n  const res = await axios.get(\n    `${END_POINTS.movieDetails}/${id}${END_POINTS.movieCredits}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return res.data.cast;\n};\n\nexport const MoviesReviews = async (id, page = 1) => {\n  const res = await axios.get(\n    `${END_POINTS.movieDetails}/${id}${END_POINTS.movieReviews}?api_key=${API_KEY}&language=en-US&page=${page}`\n  );\n\n  return res.data.results;\n};\n","import {  useEffect, useState } from \"react\";\nimport {MoviesDetails} from '../Api/Api'\nimport css from '../../Style/Style.module.css'\nimport { Link, Outlet, useParams, useLocation, useNavigate } from \"react-router-dom\";\nimport { lazy, Suspense } from \"react\";\nimport PropTypes from 'prop-types';\n\nconst Reviews  = lazy(() => import(\"../Reviews/Reviews\"));\nconst Cast  = lazy(() => import(\"../Cast/Cast\"));\n\nexport default function MovieDetails() {\n    const [movie, setMovie] = useState([]);\n    const { movieId } = useParams();\n    const location = useLocation()\n    const navigate = useNavigate();\n     useEffect(() => {\n       MoviesDetails(movieId).then(res => {setMovie(res)})\n     }, [movieId]);\n     \n     const handleClick = () => navigate(location?.state?.from ?? '/');\n\n    const {original_title, overview, vote_average, poster_path, release_date} = movie\n    // const movieGenres =\n    // movie !== null\n    //   ? movie.genres.map((genre) => genre.name).join(\", \")\n    //   : \"Unknown\";\n    return (\n            <>\n                <button type=\"button\"  onClick={handleClick}>Go Back</button>\n                <div className={css.movieDetails_container}>\n                    <img\n                    className={css.movieDetails_img}\n                    src={`https://image.tmdb.org/t/p/w200/${poster_path}`}\n                    alt=''\n                    />\n                    <div className={css.movieDetails_container2}>\n                    <h1>{original_title} ({release_date})</h1>\n                    <p>User Score: {(vote_average * 10).toFixed(0)}%</p>\n                    <h2>Overview</h2>\n                    <p>{overview}</p>\n                    {/* <h2>Genres</h2>\n                    <p>{movieGenres}</p> */}\n                    </div>\n                    </div>\n                <div>\n                    <h4>Additional Information</h4>\n                    <ul>\n                    <li><Link to='cast' state={{ from: 'cast' }} element={<Cast />}>Cast</Link></li>\n                    <li><Link to='reviews' state={{ from: 'reviews' }} element={<Reviews />}>Reviews</Link></li>\n                    </ul>\n                    <Suspense fallback={<div className={css.rendering_container}><h2>Rendering...</h2></div>}>\n                    <Outlet />\n                    </Suspense>\n                </div>\n            </>\n        )\n}\nMovieDetails.propTypes = {\n    movieId: PropTypes.string.isRequired,\n  };\n  "],"names":["API_KEY","axios","END_POINTS","getMovies","page","res","data","results","Query","query","MoviesDetails","id","MoviesCredits","cast","MoviesReviews","Reviews","lazy","Cast","MovieDetails","useState","movie","setMovie","movieId","useParams","location","useLocation","navigate","useNavigate","useEffect","then","original_title","overview","vote_average","poster_path","release_date","type","onClick","state","from","className","css","src","alt","toFixed","to","element","Suspense","fallback"],"sourceRoot":""}