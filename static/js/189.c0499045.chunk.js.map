{"version":3,"file":"static/js/189.c0499045.chunk.js","mappings":"mTAEMA,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EACM,uBADNA,EAES,gBAFTA,EAGU,SAHVA,EAIU,WAJVA,EAKU,WAGHC,EAAS,mCAAG,yGAAOC,EAAP,+BAAc,EAAd,SACLH,EAAAA,EAAAA,IAAA,UACbC,EADa,oBACkBF,EADlB,iBACkCI,EADlC,oDADK,cACjBC,EADiB,yBAIhBA,EAAIC,KAAKC,SAJO,2CAAH,qDAOTC,EAAK,mCAAG,WAAOC,GAAP,4FAAcL,EAAd,+BAAqB,EAArB,SACDH,EAAAA,EAAAA,IAAA,UACbC,EADa,oBACqBF,EADrB,iBACqCI,EADrC,kBACmDK,EADnD,wCADC,cACbJ,EADa,yBAKZA,EAAIC,KAAKC,SALG,2CAAH,sDAQLG,EAAa,mCAAG,WAAMC,GAAN,uFACTV,EAAAA,EAAAA,IAAA,UACbC,EADa,YACcS,EADd,oBAC4BX,EAD5B,oBADS,cACrBK,EADqB,yBAKpBA,EAAIC,MALgB,2CAAH,sDASbM,EAAa,mCAAG,WAAMD,GAAN,uFACTV,EAAAA,EAAAA,IAAA,UACbC,EADa,YACcS,GADd,OACmBT,EADnB,oBACsDF,EADtD,oBADS,cACrBK,EADqB,yBAKpBA,EAAIC,KAAKO,MALW,2CAAH,sDAQbC,EAAa,mCAAG,WAAOH,GAAP,4FAAWP,EAAX,+BAAkB,EAAlB,SACTH,EAAAA,EAAAA,IAAA,UACbC,EADa,YACcS,GADd,OACmBT,EADnB,oBACsDF,EADtD,gCACqFI,IAF5E,cACrBC,EADqB,yBAKpBA,EAAIC,KAAKC,SALW,2CAAH,qD,oHCzCX,SAASQ,IACpB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAOR,OALAE,EAAAA,EAAAA,YAAU,YACNP,EAAAA,EAAAA,IAAcK,GAASG,MAAK,SAAAjB,GAAQa,EAAQb,EAAK,GACpD,GAAC,CAACc,IAEHI,QAAQC,IAAIP,IAER,+BACI,wBACCA,EAAKQ,KAAI,SAAAC,GAAM,OACZ,2BACA,0BAAI,UAAQA,EAAOC,WACnB,uBAAID,EAAOE,YAFFF,EAAOf,GADJ,OAS3B,C","sources":["components/Api/Api.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst API_KEY = '0c0590b3805374471ab3fff3c1c487de';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst END_POINTS = {\n  trending: '/trending/movie/week',\n  querySearch: '/search/movie',\n  movieDetails: '/movie',\n  movieCredits: '/credits',\n  movieReviews: '/reviews',\n};\n\nexport const getMovies = async (page = 1) => {\n  const res = await axios.get(\n    `${END_POINTS.trending}?api_key=${API_KEY}&page=${page}&language=en-US&include_adult=false&per_page=24`\n  );\n  return res.data.results;\n};\n\nexport const Query = async (query, page = 1) => {\n  const res = await axios.get(\n    `${END_POINTS.querySearch}?api_key=${API_KEY}&page=${page}&query=${query}&language=en-US&include_adult=false`\n  );\n\n  return res.data.results;\n};\n\nexport const MoviesDetails = async id => {\n  const res = await axios.get(\n    `${END_POINTS.movieDetails}/${id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return res.data;\n};\n\n\nexport const MoviesCredits = async id => {\n  const res = await axios.get(\n    `${END_POINTS.movieDetails}/${id}${END_POINTS.movieCredits}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return res.data.cast;\n};\n\nexport const MoviesReviews = async (id, page = 1) => {\n  const res = await axios.get(\n    `${END_POINTS.movieDetails}/${id}${END_POINTS.movieReviews}?api_key=${API_KEY}&language=en-US&page=${page}`\n  );\n\n  return res.data.results;\n};\n","import { useEffect, useState } from 'react';\nimport {MoviesReviews} from '../Api/Api'\nimport {  useParams } from \"react-router-dom\";\n\nexport default function Reviews() {\n    const [item, setItem] = useState([])\n    const { movieId } = useParams();\n\n    useEffect(() => {\n        MoviesReviews(movieId).then(res => {setItem(res)})\n    },[movieId])\n\n    console.log(item)\n    return (\n        <>  \n            <ul>\n            {item.map(review => (\n                <li key={review.id}>\n                <h3>Autor: {review.author}</h3>\n                <p>{review.content}</p>\n                </li>\n            ))}\n            </ul>\n        </>\n    )\n}\n"],"names":["API_KEY","axios","END_POINTS","getMovies","page","res","data","results","Query","query","MoviesDetails","id","MoviesCredits","cast","MoviesReviews","Reviews","useState","item","setItem","movieId","useParams","useEffect","then","console","log","map","review","author","content"],"sourceRoot":""}